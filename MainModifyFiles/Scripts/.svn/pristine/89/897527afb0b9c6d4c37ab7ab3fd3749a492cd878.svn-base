// **********************************************************************
// Copyright (c) 2013 Baoyugame. All rights reserved.
// File     :  QiniuFile.cs
// Author   : willson
// Created  : 2014/11/24 
// Porpuse  : 
// **********************************************************************
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Qiniu.IO;
using UnityEngine;
using Qiniu.RS;
using Qiniu.Util;
using System;
using Qiniu.Conf;

public class QiniuFile
{
	public static string DOMAIN = "kdtsgameprivate.qiniudn.com";

	protected static string Bucket = "kdtsgameprivate";
	public static string NewKey
	{
		get { return Guid.NewGuid().ToString(); }
	}


	public QiniuFile ()
	{
	}

	public string PutAmrBuf(byte[] buf,int bufSize,string key = "")
	{
		IOClient target = new IOClient();
		if(string.IsNullOrEmpty(key))
			key = NewKey;

		PutExtra extra = new PutExtra(); // TODO: 初始化为适当的值
		extra.MimeType = "amr audio/x-amr";
		extra.Crc32 = 123;
		extra.CheckCrc = CheckCrcType.CHECK;
		extra.Params = new System.Collections.Generic.Dictionary<string, string>();

		target.PutFinished += new EventHandler<PutRet>((o, e) =>
		{
			if (e.OK)
			{
				//RSHelper.RSDel(Bucket, key);
				Debug.Log("send: Hello, Qiniu Cloud!");
			}
		});

		string token = "";
		if(!string.IsNullOrEmpty(Config.ACCESS_KEY) && !string.IsNullOrEmpty(Config.SECRET_KEY))
		{
			PutPolicy put = new PutPolicy(Bucket);
			token = put.Token();
		}
		else
		{
			token = VoiceRecognitionManager.Instance.GetUpToken();
		}

		PutRet ret = target.Put(token, key, StreamEx.ToStream(buf,bufSize), extra);
		return key;
	}
}